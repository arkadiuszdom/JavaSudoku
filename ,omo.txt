Zadanie 10 - Interfejs graficzny JavaFX
Æwiczenie

Kontynuuj rozwój interfejsu graficznego JavaFX

    Zaimplementuj dwustronne wi¹zanie instancji SudokuBoard i formularza z plansz¹ sudoku. Formularz ma byæ edytowalny. Pamiêtaj o w³aœciwej weryfikacji wartoœci wpisywanych w pola
    Dodaj kontrolkê pozwalaj¹c¹ zapisaæ/odczytaæ sudoku do/z pliku. U¿yj istniej¹cych kontrolek JavaFX i ju¿ zaimplementowanych przez siebie komponentów
    Stwórz pliki z zasobami (resource bundles) dla dwóch ró¿nych wersji jêzykowych swojej aplikacji, przy czym jedn¹ z wersji musi byæ polska
    Utwórz dowolny zasób bazuj¹cy na ListResourceBundle i u¿yj go w swojej aplikacji. Implementacja powinna byæ tak prosta jak to mo¿liwe, np. mo¿e zawieraæ listê autorów aplikacji
    Zmieñ konfiguracjê komponentów JavaFX tak, aby wykorzystywa³y pliki zasobów zamiast umieszczonych w kodzie ³añcuchów znaków
    Dodaj kontrolkê do prze³¹czania pomiêdzy ró¿nymi wersjami jêzykowymi aplikacji. Mo¿na zaimplementowaæ dodatkowy komponent zarz¹dzaj¹cy plikami zasobów twojej aplikacji

Zadanie 11 - Wyj¹tki i logowanie
Æwiczenie

    Usuñ wszystkie System.out z kodu programu i w zamian u¿yj Loggerów.
    Mo¿esz u¿yæ ró¿nych bibliotek loguj¹cych (do dziennika zdarzeñ), takich jak np.
        Java Logging API (JUL - java.util.logging standardowo wbudowana w Java API)
        log4j
        commons-logging
        logback
        slf4j (zalecana) - to jest tylko API loguj¹ce, które mo¿na po³¹czyæ ze wszystkimi bibliotekami powy¿ej.
    Skonfiguruj loggery tak aby zapisywa³y informacje o sytuacjach wyj¹tkowych do pliku i na konsolê
        Konfiguracja loggerów MUSI znajdowaæ siê w zewnêtrznym pliku konfiguracyjnym
    Zaprojektuj i zaimplementuj hierarchiê w³asnych wyj¹tków aplikacyjnych. Pamiêtaj o internacjonalizacji komunikatów zg³aszanych przez wyj¹tki.
    Wykorzystaj mechanizm opakowywania wyj¹tków (exception chaining). W ten sposób przekszta³æ wszystkie wyj¹tki biblioteczne do swoich w³asnych.
    Zmieñ implementacjê komponentów tak, aby wykorzystaæ zaimplementowan¹ hierarchiê wyj¹tków
    Dopasuj testy jednostkowe do zmodyfikowanego kodu

Zadanie 12 - Baza danych
Æwiczenie

    Wykorzystaj dowolny system baz danych do utworzenia bazy danych sk³aduj¹cych plansze do Sudoku (SudokuBoard)
        Apache Derby (JavaDB) jest dostêpna w JDK
        Baza danych mo¿e wymagaæ utworzenia dwóch tabel powi¹zanych relacj¹ 1-N
    Ka¿da plansza powinna byæ opatrzona nazw¹ (tak jak nazwa pliku dla FileSudokuBoardDao)
    Zaimplementuj komponent JdbcSudokuBoardDao implementuj¹cy Dao<SudokuBoard>. Komponent powinien byæ Autocloseable i nadpisywaæ metodê finalize()
    Dodaj metodê tworz¹c¹ takie Dao do SudokuBoardDaoFactory
    Podmieñ FileSudokuBoardDao, b¹dŸ dodaj do aplikacji kod zapisuj¹cy SudokuBoard do bazy danych
    Pamiêtaj o opakowaniu wyj¹tków JDBC we w³asne wyj¹tki
